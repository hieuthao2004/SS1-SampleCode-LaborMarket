function TripletStableMatching(employees, companies, departments, preferencesB, preferencesC):
    initialize matchedB as an array of -1 (indicating no matches)
    initialize matchedC as an array of -1 (indicating no matches)
    initialize freeA as a list of all employees (initially all employees are free)
    initialize stableMatches as 0

    while freeA is not empty:
        a = first employee in freeA  // Get the first free employee
        preferencesA = preferences of employee a

        for each b in preferencesA:  // Iterate through employee's company preferences
            c = a  // Assume that the department corresponds to the employee for simplicity

            // Check if company b and department c are free
            if matchedB[b] == -1 and matchedC[c] == -1:
                // Match employee a with company b and department c
                matchedB[b] = a
                matchedC[c] = b
                stableMatches++

                // Calculate satisfaction for the triplet (a, b, c)
                satisfactionA = getSatisfaction(preferencesB[b], employeeA, companyB)
                satisfactionB = getSatisfaction(preferencesB[b], companyB, employeeA)
                satisfactionC = getSatisfaction(preferencesC[c], departmentC, companyB)

                // Store or print the triplet (employee, company, department)
                outputTriplet(a, b, c, satisfactionA, satisfactionB, satisfactionC)

                break  // Move on to the next free employee

    return stableMatches
